apply plugin: 'com.android.library'

android {
	compileSdkVersion 28

	defaultConfig {
		minSdkVersion 23
		targetSdkVersion 28
		versionCode 1
		versionName "1.0"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		consumerProguardFiles 'consumer-rules.pro'

		externalNativeBuild {
			cmake {
				cppFlags "-std=c++17"
				arguments "-DANDROID_STL=c++_shared"
			}
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
		}
	}

	externalNativeBuild {
		cmake {
			path "src/main/cpp/CMakeLists.txt"
			version "3.10.2"
		}
	}
}

task fetchSpotify(type: Exec) {
	commandLine 'sh', './fetch-spotify.sh'
}
preBuild.dependsOn fetchSpotify

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])

	api 'com.spotify.android:auth:1.1.0'
	api project(':libnodejsembed')
	api project(':libdatacpp')
	api project(':libasynccpp')

	implementation 'androidx.appcompat:appcompat:1.1.0'
	testImplementation 'junit:junit:4.12'
	androidTestImplementation 'androidx.test:runner:1.2.0'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
